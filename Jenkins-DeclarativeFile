pipeline{
    agent any
    notifyBuild('STARTED')
    try {
    options {
           timestamps()
    }//optionsclosure

    tools{
        maven 'maven3.9.0'
    }//toolsclosure
    stages{
        stage('checkoutCode-Git'){
            steps{
                git branch: 'development', credentialsId: '629f01a2-b69c-4ddb-84c9-fd4b7ef68f76', url: 'https://github.com/NaveenSai1605/maven-web-application.git'
            }//gitclosure
        }
        stage('Build'){
            steps{
                sh "mvn clean package"
            }//buildclosure
        }
        stage('SonarqubeReport'){
            steps{
                sh "mvn sonar:sonar"
            }//sonarqubeclosure
        }
        stage('ArtifactToNexus'){
            steps{
                sh "mvn clean deploy"
            }//Nexusclosure
        }
        stage('DeployToTomcat'){
            steps{
                   sshagent(['74ac16d7-45cd-4440-8b24-16ea7c173ee7']) {
            sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@65.0.134.178:/opt/apache-tomcat-9.0.71/webapps"
                }
                
            }//tomcatclosure
        }
    }
}//TryClosure
catch (e) {
currentBuild.result="FAILED"
}
finally{
notifyBuild(currentBuild.result)
}
}//pipelineclosure
def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
